{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled7.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Manjunath727/DL/blob/master/2/5_Batch_%26_Stochastic_Training\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "metadata": {
        "id": "Yh6MWwpUvBjl",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 347
        },
        "outputId": "c2ee8236-560c-4c1f-d1a7-af41ff0b775b"
      },
      "cell_type": "code",
      "source": [
        "# 4. Batch and Stochastic Training\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import tensorflow as tf\n",
        "\n",
        "# create a tf session\n",
        "sess = tf.Session()\n",
        "\n",
        "# Declare a batch-size\n",
        "batch_size = 20\n",
        "\n",
        "# Declare data, variable and placeholder in the model\n",
        "x_vals = np.random.normal(1, 0.1, 100)\n",
        "y_vals = np.repeat(10., 100)\n",
        "x_data = tf.placeholder(shape=[None, 1], dtype=tf.float32)\n",
        "y_target = tf.placeholder(shape=[None,1], dtype=tf.float32)\n",
        "A = tf.Variable(tf.random_normal(shape=[1,1]))\n",
        "\n",
        "# Add our operation to the graph. Matrix multiplication\n",
        "my_output = tf.matmul(x_data, A)\n",
        "\n",
        "# Loss function - takes mean of all the L2 losses of each data point\n",
        "loss = tf.reduce_mean(tf.square(my_output - y_target))\n",
        "\n",
        "# Stochastic loss function\n",
        "#loss_s = tf.square(my_output - y_target)\n",
        "\n",
        "\n",
        "# Declare the optimizer\n",
        "my_opt = tf.train.GradientDescentOptimizer(0.02)\n",
        "train_step = my_opt.minimize(loss)\n",
        "\n",
        "init = tf.global_variables_initializer()\n",
        "sess.run(init)\n",
        "\n",
        "# Iterate on the training set to optimize the algorithm\n",
        "loss_batch=[]\n",
        "for i in range(100):\n",
        "  rand_index = np.random.choice(100, size=batch_size)\n",
        "  rand_x = np.transpose([x_vals[rand_index]])\n",
        "  rand_y = np.transpose([y_vals[rand_index]])\n",
        "  sess.run(train_step, feed_dict={x_data: rand_x, y_target: rand_y})\n",
        "  if (i+1)%5==0:\n",
        "    #print('Step #' + str(i+1) + ' A = ' + str(sess.run(A)))\n",
        "    temp_loss = sess.run(loss, feed_dict = {x_data: rand_x, y_target: rand_y})\n",
        "    #print('Loss = ' + str(temp_loss))\n",
        "    loss_batch.append(temp_loss)\n",
        "    \n",
        "    \n",
        "# Iterate on the training set to optimize the algorithm\n",
        "loss_stochastic=[]\n",
        "for i in range(100):\n",
        "  rand_index = np.random.choice(100, size=1)\n",
        "  rand_x = np.transpose([x_vals[rand_index]])\n",
        "  rand_y = np.transpose([y_vals[rand_index]])\n",
        "  sess.run(train_step, feed_dict={x_data: rand_x, y_target: rand_y})\n",
        "  if (i+1)%5==0:\n",
        "    #print('Step #' + str(i+1) + ' A = ' + str(sess.run(A)))\n",
        "    temp_loss = sess.run(loss, feed_dict = {x_data: rand_x, y_target: rand_y})\n",
        "    #print('Loss = ' + str(temp_loss))\n",
        "    loss_stochastic.append(temp_loss)\n",
        "\n",
        "    \n",
        "# Plot of Stochastic and batch loss for same regression problem\n",
        "plt.plot(range(0,100,5), loss_stochastic, 'b-', label='Stochastic Loss')\n",
        "plt.plot(range(0,100,5), loss_batch, 'r--', label = 'Batch Loss')\n",
        "plt.legend(loc='upper right', prop={'size': 11})\n",
        "plt.show()"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAd8AAAFKCAYAAABcq1WoAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAIABJREFUeJzt3Xl8E3XixvHP5GqbHrSUlEMB8UJU\n8EQFQakcirqKrgdWQdf1WgTZVReRRQQRPPDnASi4eOwKi6K44LEIKAKiliqiiOCFFzcUaOmZe35/\nBAoI9IC00zTP+/XKK20SJk++pHky30xmDNM0TURERKTO2KwOICIiEm9UviIiInVM5SsiIlLHVL4i\nIiJ1TOUrIiJSx1S+IiIidcxRF3eSn18c9WVmZLgpKCiL+nLjmca0dmhco09jGn0a0+jzeFIPel3M\nrvk6HHarIzQ4GtPaoXGNPo1p9GlM61bMlq+IiEisUvmKiIjUMZWviIhIHVP5ioiI1DGVr4iISB1T\n+YqIiNQxla+IiEgdU/mKiIjUMZWviEicy839hOuvv55Bg27n1lv7M2LE/RQXR/ZMuHLlCjZsWF/j\nZW7atJErrrg4KvnmzZsDwI8/fs9TTz1e5/dfG1S+IiJxLBAIMHr0CJ566ikmTHieKVNeoVmz5rz7\n7lsAzJnzDhs3brAsX37+VmbPfhOA445ry9/+NsSyLNFUJ/t2FhGR+snn8+H1llNeXo7bnQTAgAF3\nAbB48UIWLvyA1atXcdddd+PxZPHEE48QDocJhULccccgTjnlVAoKdjB27ChKSkqw2+3cffcQkpLc\nAPzzn8/x1VfLKS8v4/HHn8bjyWLWrJnMnfs/nE4nLpeLUaMeITU1lUmTJrB8+ec4nS48Hg//+Mco\nRo0azs8/r2H06BFccsllTJkyiUmTXmTdurU89tjDmKaJy+Vi2LAH8XiyqvWY3333Ld56600SEhJp\n3DiT++77BwkJiTz22MOsXfsbhmFw3HFtueee+1i+fBmTJk0gMTERv9/PX/96L+3anXTY415l+b7x\nxhu8/fbbFb9/8803vPrqq4wcORKAtm3bMmrUqMMOUm1+P8mPjYE0Nwy+r+7uV0SkFowcmcA779TO\netAf/hBk5EhfpbdJSUnh5ptvo0+fPrRrdzKnn34G2dndadXqKM4/P5s33niVG2/8M2ec0ZG77x5I\nnz5XccEFPfjppzUMHXoPb7zxFpMnT+Scc87lj3+8hi+//IK5c+dwxRVXsWPHdnr06MVttw3g0UdH\n88EH87nuuhvw+bw89dRE3O5kHn98DPPnz6Fnz978979vMHfuQux2OwsWvM+OHTu4+ebbmDJlEg88\n8BDLly+ryP3EE4+Qk9Ofzp278MEH81i48AOuuSanyjHZvHkzL730T6ZNex23O5mJE59mxozpdOly\nHqtXf8N//jMTgLffnkVJSQmvvz6dvn2vp3v3Xqxd+ytr1/52eP8pu1Q57Xz11VczdepUpk6dyqBB\ng+jTpw9jxoxh2LBhvPbaa5SUlLB48eKohKkWp5OEN1+H55+HcLju7ldEpIG64Yab+PDDD7n00svY\nvHkzt912E7NmzdzvdqtXf0PHjmcDcMwxx1JWVkJhYSGrV3/DaaedAcBpp51RsebcqFE6Rx99LAAe\nTxYlJcUVl99772AGDryNvLxcCgsLSUtL4+yzz2HgwNt49dVptG/fgWbNmh0089732aPHhdUqXoAf\nfviOtm1PwO1Orsj73Xerad26za5cdzFr1kzOPz+blJQUeva8iOeff5YJE55ix44ddOlyfrXupyo1\nerv17LPP8sgjj3DDDTfQoUMHALKzs8nNzeX886MTqEqGQeDcrtjfeA37d98SOvHwV/9FRKwycqSv\nyrXT2ub1emnZ0kPPnhfRs+dFXHBBdyZOfJorrrjqd7c09vnNNMEwwDAMTNPcb7l2u/13tzfZunUL\nzz77NFOnvk5GRmMmTny64vqHH36c3377lU8//ZiBA29jzJjKNq4yMM2ar4AZ+z6EXbkNEhISeO65\nF/j+++/49NMl3HLLjUya9CLdu/firLM68dlnS3n55Rc48cSTuP32O2t8v79X7fL9+uuvad68OXa7\nnbS0tIrLMzMzyc/Pr/TfZmS4o3u4qt694I3XaLziMzj/nOgtVyo9/qQcOo1r9GlMo2PJkiWMGzeO\n6dOnV4xpUdF2jj66DR5PKgkJTpKTnXg8qZx22ql8991XXHzxxaxevZrGjTM49tiWdOx4Jt988wXn\nnHMay5Yt44033mDQoEHYbEbFMpOTEwgGg4CPxo0bc/zxrSksLGT58s/o1q0bXm8hCxYs4KabbuLM\nM9tTXl7Eli3rOPLIIzEME48nlfR0N06nHY8nlTPOOJ3Vq7+kd+/ezJkzh++++46777674nH5fMn7\n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\npI79P/XMYXjYjx5pAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 576x396 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    }
  ]
}